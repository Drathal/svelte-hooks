diff --git a/node_modules/@react-aria/interactions/dist/module.js b/node_modules/@react-aria/interactions/dist/module.js
index f876d03..ce14ceb 100644
--- a/node_modules/@react-aria/interactions/dist/module.js
+++ b/node_modules/@react-aria/interactions/dist/module.js
@@ -159,7 +159,7 @@ export function usePress(props) {
 
     let pressProps = {
       onKeyDown(e) {
-        if ($ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(e.nativeEvent)) {
+        if ($ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(e.nativeEvent || e)) {
           e.preventDefault();
           e.stopPropagation(); // If the event is repeating, it may have started on a different element
           // after which focus moved to the current element. Ignore these events and
@@ -177,7 +177,7 @@ export function usePress(props) {
       },
 
       onKeyUp(e) {
-        if ($ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(e.nativeEvent) && !e.repeat) {
+        if ($ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(e.nativeEvent || e) && !e.repeat) {
           triggerPressUp($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e), 'keyboard');
         }
       },
@@ -192,7 +192,7 @@ export function usePress(props) {
           // trigger as if it were a keyboard click.
 
 
-          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && $ffc54430b1dbeee65879852feaaff07d$var$isVirtualClick(e.nativeEvent)) {
+          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && $ffc54430b1dbeee65879852feaaff07d$var$isVirtualClick(e.nativeEvent || e)) {
             // Ensure the element receives focus (VoiceOver on iOS does not do this)
             if (!isDisabled) {
               focusWithoutScrolling(e.currentTarget);
